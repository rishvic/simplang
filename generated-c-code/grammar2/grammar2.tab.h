#ifndef GRAMMAR2_TABLE_H_
#define GRAMMAR2_TABLE_H_

#define TERMINAL_COUNT 32
#define NONTERMINAL_COUNT 26

#define TOK_MINUS 0
#define TOK_MINUS_STR "\"-\""
#define TOK_SCAN 1
#define TOK_SCAN_STR "scan"
#define TOK_DO 2
#define TOK_DO_STR "do"
#define TOK_FLOAT 3
#define TOK_FLOAT_STR "float"
#define TOK_WHILE 4
#define TOK_WHILE_STR "while"
#define TOK_NOT 5
#define TOK_NOT_STR "not"
#define TOK_AND 6
#define TOK_AND_STR "and"
#define TOK_ELSE 7
#define TOK_ELSE_STR "else"
#define TOK_IC 8
#define TOK_IC_STR "ic"
#define TOK_END 9
#define TOK_END_STR "end"
#define TOK_SEMI 10
#define TOK_SEMI_STR "\";\""
#define TOK_ID 11
#define TOK_ID_STR "id"
#define TOK_GREATER 12
#define TOK_GREATER_STR "\">\""
#define TOK_IF 13
#define TOK_IF_STR "if"
#define TOK_LBRACE 14
#define TOK_LBRACE_STR "\"{\""
#define TOK_OR 15
#define TOK_OR_STR "or"
#define TOK_RBRACE 16
#define TOK_RBRACE_STR "\"}\""
#define TOK_STAR 17
#define TOK_STAR_STR "\"*\""
#define TOK_LESS 18
#define TOK_LESS_STR "\"<\""
#define TOK_THEN 19
#define TOK_THEN_STR "then"
#define TOK_PLUS 20
#define TOK_PLUS_STR "\"+\""
#define TOK_INT 21
#define TOK_INT_STR "int"
#define TOK_PROG 22
#define TOK_PROG_STR "prog"
#define TOK_EQUAL 23
#define TOK_EQUAL_STR "\"=\""
#define TOK_STR 24
#define TOK_STR_STR "str"
#define TOK_PRINT 25
#define TOK_PRINT_STR "print"
#define TOK_RPAREN 26
#define TOK_RPAREN_STR "\")\""
#define TOK_SLASH 27
#define TOK_SLASH_STR "\"/\""
#define TOK_LPAREN 28
#define TOK_LPAREN_STR "\"(\""
#define TOK_FC 29
#define TOK_FC_STR "fc"
#define TOK_ASSIGN 30
#define TOK_ASSIGN_STR "\":=\""
#define YYEOF 31
#define YYEOF_STR "$"

#define E_r 32
#define E_r_STR "E'"
#define AE_r 33
#define AE_r_STR "AE'"
#define BE 34
#define BE_STR "BE"
#define D 35
#define D_STR "D"
#define BE_r 36
#define BE_r_STR "BE'"
#define TY 37
#define TY_STR "TY"
#define E 38
#define E_STR "E"
#define F 39
#define F_STR "F"
#define DL 40
#define DL_STR "DL"
#define RE_p_E 41
#define RE_p_E_STR "RE+E"
#define VL_p_ID 42
#define VL_p_ID_STR "VL+id"
#define P 43
#define P_STR "P"
#define IS_p_IF_n_BE_n_THEN_n_SL 44
#define IS_p_IF_n_BE_n_THEN_n_SL_STR "IS+if.BE.then.SL"
#define T_r 45
#define T_r_STR "T'"
#define S 46
#define S_STR "S"
#define T 47
#define T_STR "T"
#define SL 48
#define SL_STR "SL"
#define WS 49
#define WS_STR "WS"
#define AE 50
#define AE_STR "AE"
#define IS 51
#define IS_STR "IS"
#define IOS 52
#define IOS_STR "IOS"
#define ES 53
#define ES_STR "ES"
#define RE 54
#define RE_STR "RE"
#define PE 55
#define PE_STR "PE"
#define VL 56
#define VL_STR "VL"
#define NE 57
#define NE_STR "NE"

extern char symbol_reps[58][256];

extern int rule0[1];
extern int rule1[4];
extern int rule2[4];
extern int rule3[1];
extern int rule4[4];
extern int rule5[3];
extern int rule6[4];
extern int rule7[1];
extern int rule8[4];
extern int rule9[2];
extern int rule10[2];
extern int rule11[3];
extern int rule12[2];
extern int rule13[2];
extern int rule14[4];
extern int rule15[2];
extern int rule16[1];
extern int rule17[3];
extern int rule18[3];
extern int rule19[3];
extern int rule20[3];
extern int rule21[1];
extern int rule22[2];
extern int rule23[5];
extern int rule24[4];
extern int rule25[2];
extern int rule26[1];
extern int rule27[4];
extern int rule28[4];
extern int rule29[2];
extern int rule30[2];
extern int rule31[2];
extern int rule32[2];
extern int rule33[3];
extern int rule34[1];
extern int rule35[3];
extern int rule36[6];
extern int rule37[3];
extern int rule38[6];
extern int rule39[3];
extern int rule40[3];
extern int rule41[5];
extern int rule42[3];
extern int rule43[2];
extern int rule44[2];
extern int rule45[3];
extern int rule46[3];
extern int rule47[4];
extern int rule48[2];

extern int *yytab[26][32];

#endif /* GRAMMAR2_TABLE_H_ */
